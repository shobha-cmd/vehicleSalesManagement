plugins {
    id 'jacoco'  // ✅ Add this
}


plugins {
	id 'org.springframework.boot' version '3.2.3' // Matches spring-webmvc-6.1.3
	id 'io.spring.dependency-management' version '1.1.6'
	id 'java'
}

group = 'com.vehicle'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17' // Matches Java version from logs
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
	mavenCentral()
}

dependencies {
    // Core Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-devtools'

    // Temporal dependency (from previous logs)
    implementation 'io.temporal:temporal-sdk:1.25.0'
    implementation 'io.temporal:temporal-spring-boot-autoconfigure:1.25.0'

    // Springdoc OpenAPI for Swagger UI (with JAXB fix from previous issue)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    runtimeOnly 'org.glassfish.jaxb:jaxb-runtime:4.0.5'

    // Lombok (inferred from previous context)
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Jackson (from previous logs)
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.3'

    // Add PostgreSQL JDBC driver
    runtimeOnly 'org.postgresql:postgresql:42.7.3' // Latest version as of May 2025



    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}



tasks.named('test') {
	useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = true
    }

    reports {
        html.required.set(true)
        junitXml.required.set(true)
    }

    // Summary in console
    afterSuite { desc, result ->
        if (!desc.parent) {
            println "\n==================== TEST SUMMARY ===================="
            println "✅ Total Tests : ${result.testCount}"
            println "🟢 Passed      : ${result.successfulTestCount}"
            println "🔴 Failed      : ${result.failedTestCount}"
            println "⚪ Skipped     : ${result.skippedTestCount}"
            println "⏱️  Duration   : ${result.endTime - result.startTime} ms"
            println "======================================================"
        }
    }
}
